/*
 * Mastercard Virtual Card Token Checkout API
 * Checkout end point used by Mastercard Virtual Card Token Integrators to receive payload data from the Mastercard Checkout Solutions and send the results of transaction authorization back to the Mastercard. Endpoints are available to retrieve payload data and send the outcome of a payment or checkout.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.checkout.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mcs.virtualcardtokens.checkout.model.AcceptanceChannelRelatedData;
import com.mcs.virtualcardtokens.checkout.model.AssuranceData;
import com.mcs.virtualcardtokens.checkout.model.MaskedCard;
import com.mcs.virtualcardtokens.checkout.model.MaskedConsumer;
import com.mcs.virtualcardtokens.checkout.model.Payload;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CheckoutResponseJWSPayload
 */
public class CheckoutResponseJWSPayloadTest {
    private final CheckoutResponseJWSPayload model = new CheckoutResponseJWSPayload();

    /**
     * Model tests for CheckoutResponseJWSPayload
     */
    @Test
    public void testCheckoutResponseJWSPayload() {
        // TODO: test CheckoutResponseJWSPayload
    }

    /**
     * Test the property 'srcCorrelationId'
     */
    @Test
    public void srcCorrelationIdTest() {
        // TODO: test srcCorrelationId
    }

    /**
     * Test the property 'srciTransactionId'
     */
    @Test
    public void srciTransactionIdTest() {
        // TODO: test srciTransactionId
    }

    /**
     * Test the property 'encryptedPayload'
     */
    @Test
    public void encryptedPayloadTest() {
        // TODO: test encryptedPayload
    }

    /**
     * Test the property 'maskedCard'
     */
    @Test
    public void maskedCardTest() {
        // TODO: test maskedCard
    }

    /**
     * Test the property 'maskedConsumer'
     */
    @Test
    public void maskedConsumerTest() {
        // TODO: test maskedConsumer
    }

    /**
     * Test the property 'shippingAddressZip'
     */
    @Test
    public void shippingAddressZipTest() {
        // TODO: test shippingAddressZip
    }

    /**
     * Test the property 'shippingCountryCode'
     */
    @Test
    public void shippingCountryCodeTest() {
        // TODO: test shippingCountryCode
    }

    /**
     * Test the property 'assuranceData'
     */
    @Test
    public void assuranceDataTest() {
        // TODO: test assuranceData
    }

    /**
     * Test the property 'acceptanceChannelRelatedData'
     */
    @Test
    public void acceptanceChannelRelatedDataTest() {
        // TODO: test acceptanceChannelRelatedData
    }

    /**
     * Test the property 'keyFingerprintId'
     */
    @Test
    public void keyFingerprintIdTest() {
        // TODO: test keyFingerprintId
    }

}
