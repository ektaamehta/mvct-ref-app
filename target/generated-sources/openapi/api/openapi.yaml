openapi: 3.0.0
info:
  contact:
    email: apisupport@mastercard.com
    name: API Support
    url: https://developer.mastercard.com/support
  description: Checkout end point used by Mastercard Virtual Card Token Integrators
    to receive payload data from the Mastercard Checkout Solutions and send the results
    of transaction authorization back to the Mastercard. Endpoints are available to
    retrieve payload data and send the outcome of a payment or checkout.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.mastercard.com/terms-of-use
  title: Mastercard Virtual Card Token Checkout API
  version: 1.0.0
servers:
- description: Production server
  url: https://api.mastercard.com/src/api/digital/payments
- description: Sandbox server
  url: https://sandbox.api.mastercard.com/src/api/digital/payments
tags:
- description: End point to retrieve transaction credentials during checkout.
  name: Checkout
paths:
  /transaction/credentials:
    post:
      description: Requests the preparation of transaction credentials for checkout.
        The transaction credentials payload data is encrypted according to JSON Web
        Encryption (JWE) specification RFC 7516. Algorithm used to encrypt the payload
        is according to RFC 7518 section 4.1. Obtain the encrypted transaction credentials
        for an enrolled card from Secure Card on File so that it can be submitted
        for authorization processing and the consumer can complete the purchase.
      operationId: postTransactionCredentials
      parameters:
      - description: "The X-Src-Cx-Flow-Id ensures to direct all calls from the same\
          \ client to the same server and maintains session affinity. When you make\
          \ your initial API call, Secure Card on File responds with the X-Src-Cx-Flow-Id\
          \ in the header. The X-Src-Cx-Flow-Id returned in this response can be used\
          \ in the subsequent calls to ensure these calls are directed to the same\
          \ server that returned the initial response."
        explode: false
        in: header
        name: X-Src-Cx-Flow-Id
        required: false
        schema:
          example: 34f4a04b.7602af12-a18b-4023-a476-8231ddcaefe7.1621276711
          maxLength: 255
          pattern: "^([0-9a-f]{8}.)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}(.[0-9]{10})?$"
          type: string
        style: simple
      - description: "The X-Src-Response-Host is used to direct all calls from the\
          \ same client to the same server to maintain session affinity. When you\
          \ make your initial API call, Mastercard Checkout Solutions responds with\
          \ the X-Src-Response-Host in the HTTP header. The X-Src-Response-Host that\
          \ is returned will contain a site specific URL that must be used in the\
          \ subsequent calls to ensure these calls are directed to the same server\
          \ that returned the initial response."
        explode: false
        in: header
        name: X-Src-Response-Host
        required: false
        schema:
          example: https://ksc.services-asn.mastercard.com/
          maxLength: 1024
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              EXAMPLE - MVCT:
                value:
                  srcClientId: da547d77-0f9f-4d53-9cc3-3e9733ba9ff5
                  srcCorrelationId: 2829642c-c5eb-46f7-a7ed-6a78c8bc3164
                  serviceId: AUTOFILL#INTEGRATOR#01
                  srcDigitalCardId: 61XJzB_BQ9qa29nGa7JZrQ000000000000US
                  dpaTransactionOptions:
                    paymentOptions:
                    - dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
        description: Checkout Request
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EXAMPLE - MVCT:
                  value:
                    checkoutResponseJWS:
                      jose_header:
                        iss: https://mastercard.com
                        iat: "1679592150"
                        alg: RS256
                        jti: 0b8bc890-5370-4fa3-97b9-cc91ecf5ef55
                        kid: 20230207164613-sandbox-payload-verification-src-mastercard-int
                      jws_payload:
                        srcCorrelationId: 2829642c-c5eb-46f7-a7ed-6a78c8bc3164
                        srciTransactionId: 27f7f379-c3b9-4acd-9032-c4502c401f44
                        encryptedPayload:
                          token:
                            paymentToken: "5480983162311596"
                            tokenExpirationMonth: "12"
                            tokenExpirationYear: "2031"
                            paymentAccountReference: 5001AK9FG2W3XUUI6R2XA5RT341KZ
                          dynamicData:
                            dynamicDataValue: "123"
                            dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
                            dynamicDataExpiration: "1651872476"
                        maskedCard:
                          srcDigitalCardId: 61XJzB_BQ9qa29nGa7JZrQ000000000000US
                          panBin: "545502"
                          panLastFour: "4229"
                          tokenBinRange: "548098"
                          tokenLastFour: "0002"
                          digitalCardData:
                            status: ACTIVE
                            descriptorName: Bank Rewards Mastercard
                            artUri: https://stage.assets.mastercard.com/card-art/combined-image-asset/79a04b0d-cb11-47bd-9e14-49f122262688.svg
                            coBrandedName: Co brand partner
                            isCoBranded: true
                          panExpirationMonth: "05"
                          panExpirationYear: "2022"
                          paymentCardDescriptor: mastercard
                          paymentCardType: DEBIT
                          dateOfCardCreated: 2022-05-04T13:44:58.027Z
                        maskedConsumer:
                          srcConsumerId: 13f0cbf0-a731-485e-b64e-df3f4cf02758
                          maskedConsumerIdentity:
                            identityType: EXTERNAL_ACCOUNT_ID
                            maskedIdentityValue: b92cc776-142f-4f2f-8239-deb648136749
                          status: ACTIVE
                          dateConsumerAdded: 2022-05-04T13:44:56.349Z
                      jws_signature: eyJraWiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5â€¦.
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
          description: |
            OK
          headers:
            X-Src-Cx-Flow-Id:
              description: "The X-Src-Cx-Flow-Id ensures to direct all calls from\
                \ the same client to the same server and maintains session affinity.\
                \ When you make your initial API call, Secure Card on File responds\
                \ with the X-Src-Cx-Flow-Id in the header. The X-Src-Cx-Flow-Id returned\
                \ in this response can be used in the subsequent calls to ensure these\
                \ calls are directed to the same server that returned the initial\
                \ response."
              explode: false
              schema:
                maxLength: 255
                pattern: "^([0-9a-f]{8}.)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}(.[0-9]{10})?$"
                type: string
              style: simple
            X-Src-Response-Host:
              description: "The X-Src-Response-Host is used to direct all calls from\
                \ the same client to the same server to maintain session affinity.\
                \ When you make your initial API call, Mastercard Checkout Solutions\
                \ responds with the X-Src-Response-Host in the HTTP header. The X-Src-Response-Host\
                \ that is returned will contain a site specific URL that must be used\
                \ in the subsequent calls to ensure these calls are directed to the\
                \ same server that returned the initial response."
              explode: false
              schema:
                example: https://ksc.services-asn.mastercard.com/
                maxLength: 1024
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                INVALID_ARGUMENT:
                  description: It can be possible if card verification is pending
                    and client is doing checkout with that card * Invalid consumer
                    id associated with card and consumer not found in system. * Address
                    not found in the system associated with the shipping address id
                    provided in request.
                  value:
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-CANNOT_BE_NULL-SRC-CLIENT-ID:
                  description: This error is related to mandatory fields are not present
                    for `srcClientId`.
                  value:
                    errordetail:
                    - message: The supplied value cannot be null
                      reason: CANNOT_BE_NULL
                      source: srcClientId
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-CANNOT_BE_NULL-SRC-DIGITAL-CARDID:
                  description: This error is related to mandatory fields are not present
                    for `srcDigitalCardId`.
                  value:
                    errordetail:
                    - message: The supplied value cannot be null
                      reason: CANNOT_BE_NULL
                      source: srcDigitalCardId
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-CANNOT_BE_NULL-TRANSCATION-AMOUNT-AND-CURRENCY-CODE:
                  description: This error is related to mandatory fields are not present
                    for `transactionAmount`.
                  value:
                    errordetail:
                    - message: The supplied value cannot be null
                      reason: CANNOT_BE_NULL
                      source: confirmationData.transactionAmount.transactionAmount
                      sourceType: BODY
                    - message: The supplied value cannot be null
                      reason: CANNOT_BE_NULL
                      source: confirmationData.transactionAmount.transactionCurrencyCode
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-INVALID_FORMAT-CORRELATIONID:
                  description: This error is related to incorrect `srcCorrelationId`
                    format
                  value:
                    errordetail:
                    - message: The format is not correct
                      reason: INVALID_FORMAT
                      source: srcCorrelationId
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-INVALID_FORMAT-SRC-CLIENT-ID:
                  description: This error is related to incorrect `srcClientId` format
                  value:
                    errordetail:
                    - message: The format is not correct
                      reason: INVALID_FORMAT
                      source: srcClientId
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-INVALID_FORMAT-SRC-DIGITAL-CARDID:
                  description: This error is related to incorrect `srcDigitalCardId`
                    format
                  value:
                    errordetail:
                    - message: The format is not correct
                      reason: INVALID_FORMAT
                      source: srcDigitalCardId
                      sourceType: BODY
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
                INVALID_ARGUMENT-LOCKED-SRC-DIGITAL-CARDID:
                  description: This error is related to `srcDigitalCardId` is LOCKED.
                  value:
                    message: Cannot process the request because it is malformed or
                      has incorrect/missing fields or values.
                    reason: INVALID_ARGUMENT
                    status: 400
              schema:
                $ref: '#/components/schemas/Error'
          description: |-
            Bad Request. Reason code of `INVALID_ARGUMENT` Identifies a malformed or invalid request. Use cases:

              * Mandatory parameters in request are missing. Example, `srcClientId` or `srcDigitalCardId` values are not provided.
              * Request parameters value has invalid format. Example, `srcClientId`, `srcDigitalCardId`,`srcCorrelationId`, `recipientIdCheckout`,  `shippingAddressId` is not in UUID format.
              * Request have `transactionAmount` object present but its property `transactionAmount` or `transactionCurrencyCode` is not present.
              * `srcDigitalCardId` associated card is in a `LOCKED` or `PENDING_VERIFICATION` state, or the card itself is not present in the system.
              * System was not able to find the consumer associated with a card or the address associated with the addressId provided in request.
              * Length of a property exceeds the maximum allowed length. Example, `srciTransactionId` parameter length is too long.
        "401":
          content:
            application/json:
              example:
                value:
                  message: Unauthorized - Access Not Granted
                  reason: UNAUTHENTICATED
                  status: 401
              schema:
                $ref: '#/components/schemas/Error'
          description: "Unauthorized, see error object for details, e.g. authorization\
            \ token validation failure"
        "403":
          content:
            application/json:
              examples:
                PERMISSION_DENIED:
                  description: |-
                    Either:
                      * DPA ID is not present or invalid DPA id value.
                      * Invalid client id is used.
                      * ClientID and Service ID combination not associated with each other.
                      * Wrong Service ID
                      * Client onboarding is not properly done with mastercard gateway.
                      * Value of recipientIdCheckout is not onboarded and used by client.
                      * Consumer's status is not active."
                  value:
                    message: "Client does not have sufficient permission. This can\
                      \ happen because the client doesn't have permission, or the\
                      \ API has not been enabled for the client project."
                    reason: PERMISSION_DENIED
                    status: 403
                PERMISSION_DENIED-EXPIRED-ENCRYPTIONKEY:
                  description: Client's registered encryption key expired.
                  value:
                    message: Payload Encryption Key has expired.
                    reason: PERMISSION_DENIED
                    status: 403
                LOCKED:
                  description: The Merchant has been restricted to receive requested
                    credentials.
                  value:
                    message: Access is denied to the requested resource. The user
                      account has been locked.
                    reason: LOCKED
                    status: 403
                    errordetail:
                    - reason: RESTRICTED
                      message: The Merchant has been restricted to receive requested
                        credentials.
                      sourceType: BODY
                      source: dpaData.dpaUri
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. API will return this response if identifier validation
            fails.
        "500":
          content:
            application/json:
              example:
                message: Internal server error. Typically a server bug. The client
                  should report this error to the server team.
                reason: INTERNAL
                status: 500
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "503":
          content:
            application/json:
              example:
                message: Service unavailable. Typically the server not able to serve
                  the request temporarily. Retry after sometime.
                reason: UNAVAILABLE
                status: 503
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Checkout end point for retrieving transaction payload.
      tags:
      - Checkout
      x-mastercard-api-encrypted: true
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    AcceptanceChannelData:
      example:
        sellerData:
          qrCodeData: 000201010211051904151234567890123455204502453038405405100.05802US5913TestMerchant6008New
            York6208030412346304570E
        consumerData:
          customerLabel: C128G324
          terminalLabel: QR@#424
          phoneNumber: 888-213-3432
          address: "1st Some Avenue, The Causeway, NYC, NY 10011"
          referenceLabel: D1333444
          purposeOftransaction: C1333444
          mobileNumber: 917-222-3333
          emailId: johndoe@mail.com
          billNumber: "543215465132123"
          storeLabel: HELCO123
          loyaltyNumber: "121123243"
      properties:
        consumerData:
          $ref: '#/components/schemas/ConsumerData'
        sellerData:
          $ref: '#/components/schemas/SellerData'
      type: object
    AcceptanceChannelRelatedData:
      description: |
        Container object for channel related data.
      example:
        acceptanceChannelTechnology: null
        acceptanceChannelData:
          sellerData:
            qrCodeData: 000201010211051904151234567890123455204502453038405405100.05802US5913TestMerchant6008New
              York6208030412346304570E
          consumerData:
            customerLabel: C128G324
            terminalLabel: QR@#424
            phoneNumber: 888-213-3432
            address: "1st Some Avenue, The Causeway, NYC, NY 10011"
            referenceLabel: D1333444
            purposeOftransaction: C1333444
            mobileNumber: 917-222-3333
            emailId: johndoe@mail.com
            billNumber: "543215465132123"
            storeLabel: HELCO123
            loyaltyNumber: "121123243"
        acceptanceChannelType: null
      properties:
        acceptanceChannelType:
          $ref: '#/components/schemas/AcceptanceChannelType'
        acceptanceChannelTechnology:
          $ref: '#/components/schemas/AcceptanceChannelTechnology'
        acceptanceChannelData:
          $ref: '#/components/schemas/AcceptanceChannelData'
      required:
      - acceptanceChannelData
      - acceptanceChannelType
      type: object
    AcceptanceChannelTechnology:
      description: Technology used to transmit/receive the acceptance channel data.
      enum:
      - QR_CODE
      - NFC
      - WIFI
      - BLUETOOTH
      - INTENT
      - SOUND
      type: string
    AcceptanceChannelType:
      description: Type of acceptance channel data.
      enum:
      - EMV_MERCHANT_PRESENTED_MODE
      type: string
    Acquirer:
      description: "Object for Acquirer related information, including BIN and merchantID.\
        \ This data is used to support authentication related decision making."
      example:
        merchantID: 550e8400
        bin: "545301"
      properties:
        bin:
          description: Unique identification code for the bank of the Merchant. This
            field is used to route payments to the proper institution.
          example: "545301"
          type: string
        merchantID:
          description: Acquirer-assigned Merchant ID used by the Acquirer to identify
            the Merchant.
          example: 550e8400
          type: string
      type: object
    Address:
      description: Object for address information.
      properties:
        addressId:
          description: Identifier used to point to the address.
          example: 96636f7f-a5f5-4fed-ad43-5baf12511e2a
          format: UUID
          type: string
        name:
          description: Contact name for the address.
          example: John Doe
          maxLength: 60
          type: string
        line1:
          description: First line the address.
          example: 114 5th ave
          maxLength: 75
          type: string
        line2:
          description: Second line of the address.
          example: Lake Street
          maxLength: 75
          type: string
        line3:
          description: Third line of the address.
          example: ""
          maxLength: 75
          type: string
        city:
          description: City of Address.
          example: NYC
          maxLength: 50
          type: string
        state:
          description: State of Address.
          example: NY
          maxLength: 30
          type: string
        countryCode:
          description: Address country code. ISO 3166 alpha 2 country code.
          example: US
          maxLength: 2
          type: string
        zip:
          description: Address zip/postal code.
          example: "10011"
          maxLength: 16
          type: string
        createTime:
          description: Time the address was created. Format Epoch UTC Seconds
          example: 2021-10-07T13:44:45.385Z
          type: string
        lastUsedTime:
          description: Time the address was last used. Format Epoch UTC Seconds
          example: 2021-10-07T13:44:45.385Z
          type: string
      type: object
    ApplicationType:
      description: "Type of environment of the DCF, such as browser, mobile app, or\
        \ IOT device."
      enum:
      - WEB_BROWSER
      - MOBILE_APP
      - IOT_DEVICE
      - OTHER
      example: BROWSER
      type: string
    AssuranceData:
      description: Object for information about any risk assessment functions performed
        by the Mastercard system.
      example:
        verificationData:
        - verificationEntity: "01"
          verificationEvents:
          - "01"
          verificationType: null
          verificationResults: "01"
          additionalData: !!binary |-
            ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
            Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
            WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
            MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
            T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
            R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
            bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
            cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
            YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
            bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
            ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
            b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
            UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
            MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
            cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
            dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
            U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
            MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
            UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
            SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
            ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
            MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
            MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
            MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
            YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
            VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
            VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
            PQ==
          verificationMethod: "01"
          verificationTimestamp: "1633632285"
        - verificationEntity: "01"
          verificationEvents:
          - "01"
          verificationType: null
          verificationResults: "01"
          additionalData: !!binary |-
            ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
            Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
            WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
            MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
            T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
            R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
            bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
            cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
            YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
            bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
            ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
            b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
            UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
            MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
            cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
            dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
            U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
            MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
            UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
            SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
            ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
            MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
            MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
            MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
            YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
            VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
            VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
            PQ==
          verificationMethod: "01"
          verificationTimestamp: "1633632285"
      properties:
        verificationData:
          items:
            $ref: '#/components/schemas/VerificationData'
          type: array
      type: object
    Browser:
      description: "In the context of 3-D Secure (3DS), the browser is a conduit to\
        \ transport messages between the 3DS Server (in the Acquirer domain) and the\
        \ ACS (in the Issuer domain). This data is required for 3DS authentication\
        \ and can either be automatically sourced or provided at the time of the request."
      example:
        acceptHeader: "application/json, text/plain, /"
        screenWidth: "1000"
        javaEnabled: true
        tz: "-2"
        ip: '***.***.***.***'
        screenHeight: "864"
        javascriptEnabled: true
        language: en-US
        userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
          Firefox/47.0
        colorDepth: "24"
      properties:
        acceptHeader:
          description: Exact content of the HTTP accept headers as sent to the 3-D
            Secure (3DS) requestor from the Cardholder's browser.
          example: "application/json, text/plain, /"
          type: string
        javaEnabled:
          description: Boolean that represents the ability of the Cardholder's browser
            to execute java.
          example: true
          type: boolean
        javascriptEnabled:
          description: Boolean that represents the ability of the Cardholder's browser
            to execute JavaScript.
          example: true
          type: boolean
        ip:
          description: IP address of the browser as returned by the HTTP headers to
            the 3-D Secure (3DS) requestor.
          example: '***.***.***.***'
          type: string
        language:
          description: Value representing the browser language as defined in IETF
            BCP47.
          example: en-US
          type: string
        colorDepth:
          description: "Value representing the bit depth of the colour palette for\
            \ displaying images, in bits per pixel."
          example: "24"
          type: string
        screenHeight:
          description: Total height of the Cardholder’s screen in pixels.
          example: "864"
          type: string
        screenWidth:
          description: Total width of the Cardholder’s screen in pixels.
          example: "1000"
          type: string
        tz:
          description: Time-zone offset in minutes between UTC and the Cardholder
            browser local time.
          example: "-2"
          type: string
        userAgent:
          description: Exact content of the HTTP user-agent header.
          example: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
            Firefox/47.0
          type: string
      type: object
    Card:
      properties:
        primaryAccountNumber:
          description: "A variable length, ISO/IEC 7812-compliant account number that\
            \ is generated within account ranges associated with a BIN by a Card Issuer."
          example: "5204731600014784"
          maxLength: 20
          minLength: 16
          type: string
        panExpirationMonth:
          description: "Expiration month of the Card, expressed as a two-digit calendar\
            \ month."
          example: "10"
          maxLength: 2
          minLength: 2
          type: string
        panExpirationYear:
          description: "Expiration year of the Card, expressed as a four-digit calendar\
            \ year."
          example: "2022"
          maxLength: 4
          minLength: 4
          type: string
        cardSecurityCode:
          description: Card security code/CVV2
          example: "123"
          maxLength: 6
          minLength: 3
          type: string
        cardholderFullName:
          description: Cardholder Full Name.
          example: John Doe
          maxLength: 256
          minLength: 0
          type: string
        cardholderFirstName:
          description: Cardholder First Name.
          example: John
          maxLength: 256
          minLength: 0
          type: string
        cardholderLastName:
          description: Cardholder Last Name.
          example: Doe
          maxLength: 256
          minLength: 0
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        paymentAccountReference:
          description: |
            A non-financial reference assigned to each unique PAN that's used to link the payment account of that PAN to affiliated payment tokens.
          example: 5001EUMYTT3AESCZGUEC77KPCLETI
          maxLength: 256
          minLength: 0
          type: string
      required:
      - primaryAccountNumber
      type: object
    CardPendingEvent:
      enum:
      - PENDING_AVS
      - PENDING_SCA
      - PENDING_CONSUMER_IDV
      type: string
    CheckoutRequest:
      description: |
        The CheckoutRequest is used to retrieve a token and  dynamic data for a card enrolled into Mastercard Checkout Solutions. The token, dynamic data, and other parameters can be used for payment authoritzation.

        The CheckoutRequest must contain the following values:
        * serviceId
        * srcClientId
        * srcDigitalCardId

        The following values are conditional:
        * srcDpaId
        * transactionAmount
      example:
        acceptanceChannelRelatedData:
          acceptanceChannelTechnology: null
          acceptanceChannelData:
            sellerData:
              qrCodeData: 000201010211051904151234567890123455204502453038405405100.05802US5913TestMerchant6008New
                York6208030412346304570E
            consumerData:
              customerLabel: C128G324
              terminalLabel: QR@#424
              phoneNumber: 888-213-3432
              address: "1st Some Avenue, The Causeway, NYC, NY 10011"
              referenceLabel: D1333444
              purposeOftransaction: C1333444
              mobileNumber: 917-222-3333
              emailId: johndoe@mail.com
              billNumber: "543215465132123"
              storeLabel: HELCO123
              loyaltyNumber: "121123243"
          acceptanceChannelType: null
        keyFingerprintId: nwzNuN9upxolVsr6q0I/phcnfA/ZlaJ2gmAJiogMCwM
        digitalAccountCredentials:
          digitalAccountReference:
            digitalAccountReferenceValue: eyJraWQiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5cHRpb24iLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.iLovKOMnT11BKASjmkvqR5d_ApojucBiG9tAuH5Qt2hRAu31-oUiEiGC5ctJ2s2OM7UUSlnuB7DHqFxhCTSbUsQ0cyUTLQ4lR9-t1c4KamR-UDbreoGgDRjC7ZLhFOIrLBXaW9eMHJKT9BoqwlyfQVM_5LkQVDzjA5zMIrgpg8VcsXmDeTGeS63ee7Ibhpk7S5jqD856xgRERMuerh0iI1sLqVhDkF5Ququ46cIAt7OstgybWLTXyEoSHWQt_qGoaDDD2Coa4ESOUNAuViMK1JSRK3zG9CtNtnnlhjqU1smMDTCfW02ajZsBDRldv3OmJF3rr0M2zUEPMF03xfG9lQ.4ktI6_pukbVgiUmp.v30MLJGPf_GMD2ubjyf05TWI15FmC7vsVNdBRrsqMGev8N0dcANZqJkYNBvM0JwLMfQdIIJUNcFBNGsobDvRMaQSxK35EwQ-lyvTlpArP90pSq9q9oJRNJ9YSvsxI9UML-MppQC89Ck7vnjef-Df1Vo7AuGmD_2POE0LaRyh6KS4Jbk0pFt4qJnAcFPxXwB0K0ODOXrq3PaxUfKUt-gVcpN5iYWJcoJivUisbpEtDb5Asa4nQTMdEuxcynMslDB4FTn6Z0OrwnU1PJxVvjegQBWMjqcCVcSWHB6Fp8KyJdIKtdG63Ui5kNeRjXgGnl2uPd97_Q_1yEWzce21hvDnfZexKkbYn43tTtC3QdWbCj8nq41wzZR-w0541Z_3qrgPGf4cUU9sv_wPun6iEvVbn4lYNqBbRKtpWhY8oE6pgCU.KB4ME3pTkX3vt4L7cwdK9w
            digitalAccountReferenceType: ENCRYPTED_CARD
        srcDpaId: 297b379a-663c-4e31-a019-b3a48701b8ae
        payloadTypeIndicatorCheckout: null
        dpaTransactionOptions:
          merchantCountryCode: US
          threeDsPreference: null
          paymentOptions:
          - dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
          - dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
          transactionAmount:
            transactionAmount: 100.12
            transactionCurrencyCode: USD
          merchantCategoryCode: "4444"
          dpaLocale: en_US
          threeDsInputData:
            browser:
              acceptHeader: "application/json, text/plain, /"
              screenWidth: "1000"
              javaEnabled: true
              tz: "-2"
              ip: '***.***.***.***'
              screenHeight: "864"
              javascriptEnabled: true
              language: en-US
              userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
                Firefox/47.0
              colorDepth: "24"
            acquirer:
              merchantID: 550e8400
              bin: "545301"
          srcTokenRequestData:
            unpredictableNumber: fa9e0426
        recipientIdCheckout: 297b379a-663c-4e31-a019-b3a48701b8ae
        srcClientId: eccbf087-f159-4d69-b31d-00bec75c0474
        assuranceData:
          verificationData:
          - verificationEntity: "01"
            verificationEvents:
            - "01"
            verificationType: null
            verificationResults: "01"
            additionalData: !!binary |-
              ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
              Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
              WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
              MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
              T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
              R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
              bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
              cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
              YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
              bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
              ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
              b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
              UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
              MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
              cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
              dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
              U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
              MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
              UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
              SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
              ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
              MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
              MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
              MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
              YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
              VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
              VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
              PQ==
            verificationMethod: "01"
            verificationTimestamp: "1633632285"
          - verificationEntity: "01"
            verificationEvents:
            - "01"
            verificationType: null
            verificationResults: "01"
            additionalData: !!binary |-
              ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
              Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
              WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
              MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
              T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
              R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
              bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
              cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
              YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
              bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
              ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
              b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
              UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
              MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
              cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
              dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
              U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
              MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
              UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
              SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
              ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
              MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
              MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
              MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
              YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
              VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
              VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
              PQ==
            verificationMethod: "01"
            verificationTimestamp: "1633632285"
        srciTransactionId: a5899431-5364-4682-be3d-aba123465a1b
        srcDigitalCardId: 61XJzB_BQ9qa29nGa7JZrQ000000000000US
        dpaData:
          dpaPresentationName: Mastercard Inc
          dpaName: Mastercard
          dpaUri: www.mastercard.com
        serviceId: SECURE_COF_MERCHANT_OBO#SRC4M-OBO-ALL4PETS#01
        srcCorrelationId: 779165e0-1905-4edd-89fa-be46497b5044
      properties:
        srcClientId:
          description: A unique identifier assigned by Mastercard during onboarding
            which signifies the responsible party Integrating to Mastercard Checkout
            Solutions (MCS).
          example: eccbf087-f159-4d69-b31d-00bec75c0474
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          type: string
        srcDpaId:
          description: |
            The registered identifier for the Digital Payment Application (DPA) accessing the service.

            __Conditional__: Required if you are a Merchant directly integrating with Mastercard Checkout Solutions (MCS) APIs, a Payment Service Provider (PSP) integrating On-Behalf-Of (OBO) a Merchant, a Payment Facilitator, or if you are enrolling in the Secure Card on File (SCOF) QR program.
          example: 297b379a-663c-4e31-a019-b3a48701b8ae
          type: string
        srcCorrelationId:
          description: |
            A unique identifier that correlates a series of two or more requests to a single session of activity. Mastercard Checkout Solutions (MCS) will return a new srcCorrelationId in each response by default, but Integrators may choose to populate previously used srcCorrelationIds in subsequent requests to correlate their activity under a single ID. This can be done by providing a Mastercard generated srcCorrelationId in the request, or by generating your own ID in the same format. SrcCorrelationId is used for tracking and troubleshooting purposes within Mastercard's ecosystem.
          example: 779165e0-1905-4edd-89fa-be46497b5044
          pattern: "^([0-9a-f]{8}.)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          type: string
        serviceId:
          description: A unique identifier assigned by Mastercard for which tokens
            are created uniquely for the entity onboarded.
          example: SECURE_COF_MERCHANT_OBO#SRC4M-OBO-ALL4PETS#01
          type: string
        srciTransactionId:
          description: An optional UUID generated by the Integrator that may be passed
            for internal tracking purposes.
          example: a5899431-5364-4682-be3d-aba123465a1b
          maxLength: 255
          type: string
        payloadTypeIndicatorCheckout:
          $ref: '#/components/schemas/PayloadTypeIndicator'
        recipientIdCheckout:
          description: |
            An SRC Client ID assigned to the Integrator by Mastercard during onboarding for the Mastercard Merchant Present QR : SRC program.
          example: 297b379a-663c-4e31-a019-b3a48701b8ae
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          type: string
        srcDigitalCardId:
          description: |
            A unique identifier that represents the token associated with a card enrolled into Mastercard Checkout Solutions (MCS). Use this srcDigitalCardId in subsequent checkout requests to retrieve a DSRP payload containing the associated token and cryptogram for payment authorization. Alternatively, use the srcDigitalCardId in a get card request to retrieve the maskedCard details.
          example: 61XJzB_BQ9qa29nGa7JZrQ000000000000US
          format: String
          type: string
        dpaTransactionOptions:
          $ref: '#/components/schemas/DpaTransactionOptions'
        assuranceData:
          $ref: '#/components/schemas/AssuranceData'
        dpaData:
          $ref: '#/components/schemas/DpaData'
        acceptanceChannelRelatedData:
          $ref: '#/components/schemas/AcceptanceChannelRelatedData'
        keyFingerprintId:
          description: "Mastercard will use the encryption key associated with the\
            \ supplied KID to encrypt the payload. If not supplied, the key which\
            \ is marked as default will be used."
          example: nwzNuN9upxolVsr6q0I/phcnfA/ZlaJ2gmAJiogMCwM
          type: string
        digitalAccountCredentials:
          $ref: '#/components/schemas/DigitalAccountCredentials'
      required:
      - srcClientId
      type: object
    CheckoutResponse:
      description: The CheckoutResponse for a srcDigitalCardId mapped to a token in
        Secure Card on File via Mastercard Checkout Solutions will include a DRSP
        payload containing the associated token and cryptogram for payment authorization.
      example:
        checkoutResponseJWS: eyJraWiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5….
      properties:
        checkoutResponseJWS:
          $ref: '#/components/schemas/CheckoutResponseJWS'
      required:
      - checkoutResponseJWS
      type: object
    CheckoutResponseJWS:
      description: It is a JWS signed by Mastercard Checkout Solutions so that the
        Integrators can validate the integrity of the data in the checkout response.
      example: eyJraWiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5….
      properties:
        jose_header:
          $ref: '#/components/schemas/JoseHeader'
        jws_payload:
          $ref: '#/components/schemas/CheckoutResponseJWSPayload'
        jws_signature:
          description: The Mastercard Checkout Solutions (MCS) JWS signature that
            the Integrator can use to validate the integrity of the data in the checkout
            response.
          example: eyJraWiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5Ã¢â‚¬Â¦.
          type: string
      required:
      - jose_header
      - jws_payload
      - jws_signature
      type: object
    CheckoutResponseJWSPayload:
      description: |
        The encryptedPayload property of CheckoutResponseJWSPayload is formatted as a string, which should be cast to the Payload schema.
      properties:
        srcCorrelationId:
          description: |
            A unique ID that correlates a series of two or more requests to a single session of activity. Mastercard Checkout Solutions will by default return a new srcCorrelationId in each response, but Integrators may choose to populate previously used srcCorrelationIds in subsequent requests to correlate their activity under a single ID. This can be done by providing a Mastercard generated srcCorrelationId in the request, or by generating your own ID in the same format. SrcCorrelationId is used for tracking and troubleshooting purposes within Mastercard's ecosystem.
          example: 779165e0-1905-4edd-89fa-be46497b5044
          format: String
          pattern: "([0-9a-f]{8}.)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          type: string
        srciTransactionId:
          description: An optional UUID generated by the Integrator that may be passed
            for internal tracking purposes.
          example: a5899431-5364-4682-be3d-aba123465a1b
          format: String
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          type: string
        encryptedPayload:
          $ref: '#/components/schemas/Payload'
        maskedCard:
          $ref: '#/components/schemas/MaskedCard'
        maskedConsumer:
          $ref: '#/components/schemas/MaskedConsumer'
        shippingAddressZip:
          description: |
            The "shippingAddressZip" parameter will be present depending on the dpaShippingPreference option in the dpaTransactionOptions structure and either a shippingAddressId or shippingAddress object was present in the Checkout request data
          example: "10011"
          type: string
        shippingCountryCode:
          description: |
            The "shippingCountryCode" parameter will be present depending on the dpaShippingPreference option in the dpaTransactionOptions structure and either a shippingAddressId or shippingAddress object was present in the Checkout request data
          example: US
          type: string
        assuranceData:
          $ref: '#/components/schemas/AssuranceData'
        acceptanceChannelRelatedData:
          $ref: '#/components/schemas/AcceptanceChannelRelatedData'
        keyFingerprintId:
          description: "Mastercard will use the encryption key associated with the\
            \ supplied KID to encrypt the payload. If not supplied, the key which\
            \ is marked as default will be used."
          example: nwzNuN9upxolVsr6q0I/phcnfA/ZlaJ2gmAJiogMCwM
          type: string
      required:
      - maskedCard
      - srcCorrelationId
      type: object
    CommunicationsConsent:
      properties:
        communicationsOptIn:
          description: Consumers "Communications Opt in" preference.
          example: true
          type: boolean
        affiliateCommunicationsOptIn:
          description: Consumers "Affiliate Communications Opt in" preference.
          example: true
          type: boolean
        allowEmail:
          description: Consumers "Communications" preference for the email channel.
          example: true
          type: boolean
        allowText:
          description: Consumers "Communications" preference for the SMS channel.
          example: true
          type: boolean
        allowCall:
          description: Consumers "Communications" preference for the telephony channel.
          example: true
          type: boolean
        allowPush:
          description: Consumers "Communications" preference for the push notification
            channel.
          example: true
          type: boolean
      type: object
    ComplianceSettings:
      properties:
        privacy:
          $ref: '#/components/schemas/Consent'
        tnc:
          $ref: '#/components/schemas/Consent'
        cookie:
          $ref: '#/components/schemas/Consent'
        geoLocation:
          $ref: '#/components/schemas/Consent'
        communications:
          $ref: '#/components/schemas/CommunicationsConsent'
      type: object
    Consent:
      properties:
        acceptedVersion:
          description: Version accepted by the Consumer.
          example: "1"
          type: string
        latestVersion:
          description: Latest supported version.
          example: "2"
          type: string
        latestVersionUri:
          description: URI of the latest version.
          example: www.url.com
          type: string
      type: object
    ConsumerData:
      description: |
        Consumer supplied data, either manually entered (or supplied by other means, e.g. voice, camera etc.) or previously stored.

        __Conditional__: At least one of consumerData or sellerData is required. Please note that consumerData values override the sellerData.
      example:
        customerLabel: C128G324
        terminalLabel: QR@#424
        phoneNumber: 888-213-3432
        address: "1st Some Avenue, The Causeway, NYC, NY 10011"
        referenceLabel: D1333444
        purposeOftransaction: C1333444
        mobileNumber: 917-222-3333
        emailId: johndoe@mail.com
        billNumber: "543215465132123"
        storeLabel: HELCO123
        loyaltyNumber: "121123243"
      properties:
        billNumber:
          description: "The invoice number or bill number. This number could be provided\
            \ by the merchant or could be an indication for the mobile application\
            \ to prompt the consumer to input a Bill Number. For example, the Bill\
            \ Number may be present when the QR Code is used for bill payment."
          example: "543215465132123"
          type: string
        mobileNumber:
          description: "The mobile number could be provided by the merchant or could\
            \ be an indication for the mobile application to prompt the consumer to\
            \ input a Mobile Number. For example, the Mobile Number to be used for\
            \ multiple use cases, such as mobile top-up and bill payment."
          example: 917-222-3333
          type: string
        storeLabel:
          description: "A distinctive value associated to a store. This value could\
            \ be provided by the merchant or could be an indication for the mobile\
            \ application to prompt the consumer to input a Store Label. For example,\
            \ the Store Label may be displayed to the consumer on the mobile application\
            \ identifying a specific store."
          example: HELCO123
          type: string
        loyaltyNumber:
          description: "Typically, a loyalty card number. This number could be provided\
            \ by the merchant, if known, or could be an indication for the mobile\
            \ application to prompt the consumer to input their Loyalty Number."
          example: "121123243"
          type: string
        referenceLabel:
          description: "Any value as defined by the merchant or acquirer in order\
            \ to identify the transaction. This value could be provided by the merchant\
            \ or could be an indication for the mobile app to prompt the consumer\
            \ to input a transaction Reference Label. For example, the Reference Label\
            \ may be used by the consumer mobile application for transaction logging\
            \ or receipt display."
          example: D1333444
          type: string
        customerLabel:
          description: "Any value identifying a specific consumer. This value could\
            \ be provided by the merchant (if known), or could be an indication for\
            \ the mobile application to prompt the consumer to input their Customer\
            \ Label. For example, the Customer Label may be a subscriber ID for subscription\
            \ services, a student enrolment number, etc."
          example: C128G324
          type: string
        terminalLabel:
          description: "Populated with a Consumer-entered terminal label if the Terminal\
            \ Label (ID \"07\"), with a value of \"***\", is present within the Additional\
            \ Data Field Template (ID \"62\") of the QR Code Payload"
          example: QR@#424
          type: string
        purposeOftransaction:
          description: "Any value identifying a specific consumer. This value could\
            \ be provided by the merchant (if known), or could be an indication for\
            \ the mobile application to prompt the consumer to input their Customer\
            \ Label. For example, the Customer Label may be a subscriber ID for subscription\
            \ services, a student enrolment number, etc."
          example: C1333444
          type: string
        emailId:
          description: Email address of the consumer.
          example: johndoe@mail.com
          type: string
        phoneNumber:
          description: Mobile number of the consumer.
          example: 888-213-3432
          type: string
        address:
          description: Address of the consumer.
          example: "1st Some Avenue, The Causeway, NYC, NY 10011"
          type: string
      type: object
    ConsumerIdentityType:
      description: Identifies the type of consumer identity transmitted or collected.
      enum:
      - EMAIL_ADDRESS
      - MOBILE_PHONE_NUMBER
      - EXTERNAL_ACCOUNT_ID
      type: string
    ConsumerStatus:
      description: "Signifies the state of the consumer at any given time at the Click\
        \ to Pay System. Example, ACTIVE, SUSPENDED, LOCKED."
      enum:
      - ACTIVE
      - SUSPENDED
      - LOCKED
      type: string
    DCF:
      properties:
        applicationType:
          $ref: '#/components/schemas/ApplicationType'
        uri:
          description: DCF URI as provided by the DCF.
          example: https://src.mastercard.com/dcf/
          maxLength: 255
          type: string
        logoUri:
          description: Logo image URI provided by the Digital Card Facilitator.
          example: http://mastercard.com/
          maxLength: 255
          type: string
        name:
          description: Legal name of DCF onboarded to the Click to Pay System.
          example: mastercard
          maxLength: 60
          type: string
      type: object
    DelegatedAuthenticationModels:
      properties:
        modelType:
          description: Delegated authentication implementation type in Authentication
            Express.
          example: AE_TYPE_3
          type: string
        isSupported:
          description: Flag indicating whether delegated authentication is supported
            for the Account PAN.
          example: true
          type: boolean
      required:
      - isSupported
      - modelType
      type: object
    DigitalAccountCredentials:
      description: |
        Container for digital account reference.

        __Conditional__: Required if Integrator would like to use the underlying card in Guest Checkout Tokenization. The checkout response for an eligible card will contain a token and cryptogram.
      example:
        digitalAccountReference:
          digitalAccountReferenceValue: eyJraWQiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5cHRpb24iLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.iLovKOMnT11BKASjmkvqR5d_ApojucBiG9tAuH5Qt2hRAu31-oUiEiGC5ctJ2s2OM7UUSlnuB7DHqFxhCTSbUsQ0cyUTLQ4lR9-t1c4KamR-UDbreoGgDRjC7ZLhFOIrLBXaW9eMHJKT9BoqwlyfQVM_5LkQVDzjA5zMIrgpg8VcsXmDeTGeS63ee7Ibhpk7S5jqD856xgRERMuerh0iI1sLqVhDkF5Ququ46cIAt7OstgybWLTXyEoSHWQt_qGoaDDD2Coa4ESOUNAuViMK1JSRK3zG9CtNtnnlhjqU1smMDTCfW02ajZsBDRldv3OmJF3rr0M2zUEPMF03xfG9lQ.4ktI6_pukbVgiUmp.v30MLJGPf_GMD2ubjyf05TWI15FmC7vsVNdBRrsqMGev8N0dcANZqJkYNBvM0JwLMfQdIIJUNcFBNGsobDvRMaQSxK35EwQ-lyvTlpArP90pSq9q9oJRNJ9YSvsxI9UML-MppQC89Ck7vnjef-Df1Vo7AuGmD_2POE0LaRyh6KS4Jbk0pFt4qJnAcFPxXwB0K0ODOXrq3PaxUfKUt-gVcpN5iYWJcoJivUisbpEtDb5Asa4nQTMdEuxcynMslDB4FTn6Z0OrwnU1PJxVvjegQBWMjqcCVcSWHB6Fp8KyJdIKtdG63Ui5kNeRjXgGnl2uPd97_Q_1yEWzce21hvDnfZexKkbYn43tTtC3QdWbCj8nq41wzZR-w0541Z_3qrgPGf4cUU9sv_wPun6iEvVbn4lYNqBbRKtpWhY8oE6pgCU.KB4ME3pTkX3vt4L7cwdK9w
          digitalAccountReferenceType: ENCRYPTED_CARD
      properties:
        digitalAccountReference:
          $ref: '#/components/schemas/DigitalAccountReference'
      required:
      - digitalAccountReference
      type: object
    DigitalAccountReference:
      description: |
        Object for digital account reference value and type. Applicable for Guest Checkout Tokenization
      example:
        digitalAccountReferenceValue: eyJraWQiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5cHRpb24iLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.iLovKOMnT11BKASjmkvqR5d_ApojucBiG9tAuH5Qt2hRAu31-oUiEiGC5ctJ2s2OM7UUSlnuB7DHqFxhCTSbUsQ0cyUTLQ4lR9-t1c4KamR-UDbreoGgDRjC7ZLhFOIrLBXaW9eMHJKT9BoqwlyfQVM_5LkQVDzjA5zMIrgpg8VcsXmDeTGeS63ee7Ibhpk7S5jqD856xgRERMuerh0iI1sLqVhDkF5Ququ46cIAt7OstgybWLTXyEoSHWQt_qGoaDDD2Coa4ESOUNAuViMK1JSRK3zG9CtNtnnlhjqU1smMDTCfW02ajZsBDRldv3OmJF3rr0M2zUEPMF03xfG9lQ.4ktI6_pukbVgiUmp.v30MLJGPf_GMD2ubjyf05TWI15FmC7vsVNdBRrsqMGev8N0dcANZqJkYNBvM0JwLMfQdIIJUNcFBNGsobDvRMaQSxK35EwQ-lyvTlpArP90pSq9q9oJRNJ9YSvsxI9UML-MppQC89Ck7vnjef-Df1Vo7AuGmD_2POE0LaRyh6KS4Jbk0pFt4qJnAcFPxXwB0K0ODOXrq3PaxUfKUt-gVcpN5iYWJcoJivUisbpEtDb5Asa4nQTMdEuxcynMslDB4FTn6Z0OrwnU1PJxVvjegQBWMjqcCVcSWHB6Fp8KyJdIKtdG63Ui5kNeRjXgGnl2uPd97_Q_1yEWzce21hvDnfZexKkbYn43tTtC3QdWbCj8nq41wzZR-w0541Z_3qrgPGf4cUU9sv_wPun6iEvVbn4lYNqBbRKtpWhY8oE6pgCU.KB4ME3pTkX3vt4L7cwdK9w
        digitalAccountReferenceType: ENCRYPTED_CARD
      properties:
        digitalAccountReferenceValue:
          description: |
            This value corresponds to the chosen digitalAccountReferenceType and is used by Integrators who would like to enroll the underlying card.

            * If digitalAccountReferenceType = ENCRYPTED_CARD, this field should carry the JWE[card].

            * If digitalAccountReferenceType = SRC_DIGITAL_CARD_ID, this field should carry the srcDigitalCardId value.
          example: eyJraWQiOiIxNDkwNjQtc3RnLXNyYy1mcGFuLWVuY3J5cHRpb24iLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.iLovKOMnT11BKASjmkvqR5d_ApojucBiG9tAuH5Qt2hRAu31-oUiEiGC5ctJ2s2OM7UUSlnuB7DHqFxhCTSbUsQ0cyUTLQ4lR9-t1c4KamR-UDbreoGgDRjC7ZLhFOIrLBXaW9eMHJKT9BoqwlyfQVM_5LkQVDzjA5zMIrgpg8VcsXmDeTGeS63ee7Ibhpk7S5jqD856xgRERMuerh0iI1sLqVhDkF5Ququ46cIAt7OstgybWLTXyEoSHWQt_qGoaDDD2Coa4ESOUNAuViMK1JSRK3zG9CtNtnnlhjqU1smMDTCfW02ajZsBDRldv3OmJF3rr0M2zUEPMF03xfG9lQ.4ktI6_pukbVgiUmp.v30MLJGPf_GMD2ubjyf05TWI15FmC7vsVNdBRrsqMGev8N0dcANZqJkYNBvM0JwLMfQdIIJUNcFBNGsobDvRMaQSxK35EwQ-lyvTlpArP90pSq9q9oJRNJ9YSvsxI9UML-MppQC89Ck7vnjef-Df1Vo7AuGmD_2POE0LaRyh6KS4Jbk0pFt4qJnAcFPxXwB0K0ODOXrq3PaxUfKUt-gVcpN5iYWJcoJivUisbpEtDb5Asa4nQTMdEuxcynMslDB4FTn6Z0OrwnU1PJxVvjegQBWMjqcCVcSWHB6Fp8KyJdIKtdG63Ui5kNeRjXgGnl2uPd97_Q_1yEWzce21hvDnfZexKkbYn43tTtC3QdWbCj8nq41wzZR-w0541Z_3qrgPGf4cUU9sv_wPun6iEvVbn4lYNqBbRKtpWhY8oE6pgCU.KB4ME3pTkX3vt4L7cwdK9w
          type: string
        digitalAccountReferenceType:
          $ref: '#/components/schemas/DigitalAccountReferenceType'
      required:
      - digitalAccountReferenceType
      - digitalAccountReferenceValue
      type: object
    DigitalAccountReferenceType:
      description: |-
        Type of digitalAccountReferenceValue being passed to Mastercard Checkout Solutions (MCS) for enrollment. The digitalAccountReferenceType will dictate the content of the digitalAccountReferenceValue parameter. Accepted enums are:

        * `ENCRYPTED_CARD` - Encrypted object for card data.

        * `SRC_DIGITAL_CARD_ID` - A unique identifier that represents the token associated with a card enrolled into Mastercard Checkout Solutions (MCS).

        * `ENCRYPTED_PAYMENT_TOKEN` - Encrypted object for token.
      enum:
      - ENCRYPTED_CARD
      - ENCRYPTED_PAYMENT_TOKEN
      - SRC_DIGITAL_CARD_ID
      example: ENCRYPTED_CARD
      type: string
    DigitalCardData:
      description: "Object for card data including token info, status, card art, and\
        \ card descriptors."
      properties:
        status:
          $ref: '#/components/schemas/DigitalCardStatus'
        presentationName:
          description: The issuer name.
          example: Bank
          maxLength: 64
          type: string
        descriptorName:
          description: "Issuers name their card portfolios, and they will create both\
            \ long descriptions and short descriptions to market their cards to Cardholders.\
            \ This is the short description for a card."
          example: Bank Rewards Mastercard
          maxLength: 64
          type: string
        artUri:
          description: URI that digitally represents the physical look of a card.
            This card art image can be used for presentation purposes in user experiences
            and is provided by Issuers.
          example: https://sandbox.assets.mastercard.com/card-art/combined-image-asset/MyBank-mastercard.png
          maxLength: 1024
          type: string
        artHeight:
          description: Height of the card art in pixels.
          example: 25
          format: int32
          type: integer
        artWidth:
          description: Width of the card art in pixels.
          example: 25
          format: int32
          type: integer
        pendingEvents:
          description: Set of events that are pending completion such as address verification
            or SCA.
          items:
            $ref: '#/components/schemas/CardPendingEvent'
          type: array
        coBrandedName:
          description: Name of the company partnering with an Issuer for a co-branded
            card.
          example: Bank Rewards Mastercard
          maxLength: 128
          type: string
        isCoBranded:
          description: Indicates whether the card is co-branded
          example: true
          type: boolean
        longDescription:
          description: "Banks name their card portfolios, and they will create both\
            \ long descriptions and short descriptions to market their cards to Cardholders.\
            \ This is the long description for a card."
          example: Bank Double Cash Back Rewards Mastercard
          maxLength: 256
          minLength: 1
          type: string
        foregroundColor:
          description: Foreground color used to overlay text on top of the card image.
            This is always returned in Product Configuration object.
          example: FF5733
          maxLength: 6
          minLength: 3
          type: string
        issuerName:
          description: Name of the issuing bank.
          example: My Bank
          maxLength: 64
          type: string
      type: object
    DigitalCardFeature:
      properties:
        content:
          description: URL of Digital Card Feature content
          example: www.contenturl.com
          type: string
        contentType:
          $ref: '#/components/schemas/DigitalCardFeatureContentType'
        style:
          description: Location of a CSS style sheet that describes how to present
            the card feature.
          example: https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css%22
          type: string
        width:
          description: Width to be applied to display of card feature
          example: 5
          format: int32
          type: integer
        height:
          description: Height to be applied to display of card feature.
          example: 5
          format: int32
          type: integer
      required:
      - content
      - contentType
      type: object
    DigitalCardFeatureContentType:
      enum:
      - TEXT_STRING
      - IMAGE_URL
      - CONTENT_URL
      - LINK_URL
      type: string
    DigitalCardStatus:
      description: |
        State of the digital card at any given time in the Mastercard Checkout Solutions (MCS) system.

        * `ACTIVE` - Token is active and able to transact.
        * `SUSPENDED` - Token is suspended by the Issuer and unable to transact.
        * `CANCELLED` - Token is deleted by the Issuer and unable to transact.
      enum:
      - ACTIVE
      - SUSPENDED
      - CANCELLED
      type: string
    DpaData:
      description: |
        DPA data is DPA related information passed during checkout.

        __Conditional__: At least one of the 3 fields within DpaData is required if you are enrolled in Delegated Authentication, or are using the Mastercard Merchant presented QR: SRC program.
      example:
        dpaPresentationName: Mastercard Inc
        dpaName: Mastercard
        dpaUri: www.mastercard.com
      properties:
        dpaPresentationName:
          description: |
            "doing business as" name
          example: Mastercard Inc
          maxLength: 60
          type: string
        dpaName:
          description: Legal name of registered DPA.
          example: Mastercard
          maxLength: 60
          type: string
        dpaUri:
          description: "Unique DPA Identifier, such as UUID, URL, APK package name\
            \ etc."
          example: www.mastercard.com
          maxLength: 1024
          type: string
      type: object
    DpaTransactionOptions:
      description: |
        Object for Integrator to indicate checkout payload related preferences.
      example:
        merchantCountryCode: US
        threeDsPreference: null
        paymentOptions:
        - dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
        - dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
        transactionAmount:
          transactionAmount: 100.12
          transactionCurrencyCode: USD
        merchantCategoryCode: "4444"
        dpaLocale: en_US
        threeDsInputData:
          browser:
            acceptHeader: "application/json, text/plain, /"
            screenWidth: "1000"
            javaEnabled: true
            tz: "-2"
            ip: '***.***.***.***'
            screenHeight: "864"
            javascriptEnabled: true
            language: en-US
            userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
              Firefox/47.0
            colorDepth: "24"
          acquirer:
            merchantID: 550e8400
            bin: "545301"
        srcTokenRequestData:
          unpredictableNumber: fa9e0426
      properties:
        transactionAmount:
          $ref: '#/components/schemas/TransactionAmount'
        merchantCategoryCode:
          description: "Describes the merchant’s type of business, product or service.\
            \ The same value is expected in the authorization request."
          example: "4444"
          type: string
        merchantCountryCode:
          description: Country code of the merchant.
          example: US
          format: ISO 3166 alpha 2
          type: string
        threeDsPreference:
          $ref: '#/components/schemas/ThreeDsPreference'
        threeDsInputData:
          $ref: '#/components/schemas/ThreeDsInputData'
        srcTokenRequestData:
          $ref: '#/components/schemas/SrcTokenRequestData'
        paymentOptions:
          description: Object for the Integrator to define the type of checkout payload
            they would like to receive.
          items:
            $ref: '#/components/schemas/PaymentOptions'
          type: array
        dpaLocale:
          description: |
            Merchant's preferred locale.
          example: en_US
          type: string
      type: object
    DynamicData:
      description: |
        Object for cryptogram corresponding to the payment token.

        Cryptograms are dynamic data that is submitted along with the payment token for payment authorization to decrypt the token and retrieve the underlying Account PAN.
      properties:
        dynamicDataValue:
          description: Value of the cryptogram corresponding to dynamicDataType.
          example: jjoutwsdgfdou124354ljlsdhgout968957
          type: string
        dynamicDataType:
          $ref: '#/components/schemas/DynamicDataType'
        dynamicDataExpiration:
          description: Expiry period of the dynamic data in UTC Format.
          example: 2022-10-07T13:44:45.385Z
          type: string
      required:
      - dynamicDataType
      type: object
    DynamicDataType:
      description: |
        Type of dynamic data required by the integrator to support a checkout request. Must be set to DYNAMIC_CARD_SECURITY_CODE.

        * `DYNAMIC_CARD_SECURITY_CODE` - (DTVC): The DTVC -Dynamic Token Verification Code is a one-time dynamic verification code. The code is 3-digits in length. Integrators should pass this value in the CVC2 field during payment authorization.
      enum:
      - DYNAMIC_CARD_SECURITY_CODE
      example: DYNAMIC_CARD_SECURITY_CODE
      type: string
    Error:
      example:
        reason: "The request contains card type, but the card type does not correspond\
          \ with the card number (e.g. card type = Visa; card number = MasterCard)"
        errordetail:
        - reason: null
          sourceType: null
          source: CARD
          message: Card type validation message
        - reason: null
          sourceType: null
          source: CARD
          message: Card type validation message
        message: Card type validation message
        status: 200
      properties:
        status:
          description: HTTP response status codes.
          example: 200
          format: int32
          type: integer
        reason:
          description: Error detailed reason.
          example: "The request contains card type, but the card type does not correspond\
            \ with the card number (e.g. card type = Visa; card number = MasterCard)"
          type: string
        message:
          description: Error message details
          example: Card type validation message
          type: string
        errordetail:
          description: List of Errors
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      required:
      - message
      - reason
      - status
      type: object
    ErrorDetail:
      example:
        reason: null
        sourceType: null
        source: CARD
        message: Card type validation message
      properties:
        reason:
          $ref: '#/components/schemas/ErrorDetailReason'
        message:
          description: Error message details
          example: Card type validation message
          type: string
        sourceType:
          $ref: '#/components/schemas/ErrorSourceType'
        source:
          description: Error source field.
          example: CARD
          type: string
      required:
      - reason
      type: object
    ErrorDetailReason:
      description: Error reason
      enum:
      - CANNOT_BE_NULL
      - INVALID_VALUE
      - INVALID_FORMAT
      - ALREADY_EXISTS
      - INVALID_STATE
      - CORRUPT_DATA
      - CANNOT_BE_DUPLICATE_OR_NULL
      - INVALID_DATA_FOR_VER_TYPE-22
      - LIMIT_EXCEED
      - NOT_FOUND
      - EXPIRED
      - CARD_NOT_FOUND
      - SUSPENDED_CARD
      - NO_RESPONSE_FROM_ISSUER
      - PAN_INELIGIBLE
      - TOKENIZATION_INELIGIBLE
      - ISSUER_DECLINED
      - NOT_SUPPORTED
      - MULTIPLE_FOUND
      - INACTIVE_CARD
      - RESTRICTED
      - SANCTIONED
      type: string
    ErrorSourceType:
      description: Source of error
      enum:
      - BODY
      - HEADER
      - QUERY
      - PATH
      type: string
    IdentityProvider:
      description: The entity or organisation verifying consumers identity.
      enum:
      - SRC
      type: string
    JoseHeader:
      description: The Header for Checkout JWS generated using a JWS compliant library.
      properties:
        alg:
          description: RSA256 algorithm used to sign or encrypt the JWS.
          example: RS256
          type: string
        kid:
          description: "Mastercard will use a private key to sign the JWS payload,\
            \ and the KID indicates the corresponding public key ID which Integrators\
            \ should use from the public Mastercard URL to verify the signature."
          example: 1e9gdk
          type: string
        iss:
          description: "The URI of the issuing party, which is Mastercard."
          example: mastercard.com
          type: string
        jti:
          description: "Unique identifier generated by Mastercard for each JWS payload\
            \ (typically, a UUID formatted string)."
          example: 279684de-9523-4f7b-96a8-da0e2bd1e005
          type: string
        iat:
          description: Time in UTC epoc format at which the JWS was generated and
            issued to the requester.
          example: "1311280970"
          type: string
      required:
      - alg
      - iat
      - iss
      - jti
      - kid
      type: object
    MaskedAddress:
      properties:
        addressId:
          description: Identifier used to point to the address.
          example: 0e01ac3a-d5ba-41ea-a5fd-2b75d585734b
          format: UUID
          type: string
        name:
          description: Masked name of the consumer
          example: M*** Sc****t
          type: string
        line1:
          description: First line of the address.
          example: 1** F**** A*****
          type: string
        line2:
          description: Second line of the address.
          example: M********
          type: string
        line3:
          description: Third line of the address.
          example: ""
          type: string
        city:
          description: Masked city name.
          example: N** Y***
          type: string
        state:
          description: Consumer provided state.
          example: N*
          type: string
        countryCode:
          description: Consumer-provided country code. ISO 3166 alpha 2 country code.
          example: US
          type: string
        zip:
          description: Masked zip or postal code.
          example: 1****
          type: string
        createTime:
          description: Time the address was created. Format Epoch UTC Seconds
          example: "1633632285"
          type: string
        lastUsedTime:
          description: Timestamp in UTC
          example: 2021-10-07T13:44:45.385Z
          type: string
      required:
      - addressId
      type: object
    MaskedCard:
      description: "Object for information related to an enrolled card into Mastercard\
        \ Checkout Solutions - details include card art, masked PAN information, and\
        \ token data."
      properties:
        srcDigitalCardId:
          description: "A unique identifier that represents the token associated with\
            \ a card enrolled into Mastercard Checkout Solutions. Use this srcDigitalCardId\
            \ in subsequent Checkout API requests to retrieve a DRSP payload containing\
            \ the associated token and cryptogram for payment authoritzation. Alternatively,\
            \ use the srcDigitalCardId in a Get Card request to retrieve the maskedCard\
            \ details."
          example: 61XJzB_BQ9qa29nGa7JZrQ000000000000US
          type: string
        srcPaymentCardId:
          description: |
            A reference representing the PAN that enables the Click to Pay System to communicate with the SRC Participating Issuer without transmitting the actual PAN. It is associated with the SRC Profile to which the payment card belongs and is unique within an Click to Pay System.
          example: 68bf50ec-0e8b-414f-8cfc-63e9c3fb9d48
          type: string
        panBin:
          description: "The first six digits of a PAN, typically the issuer BIN, in\
            \ an unmasked format."
          example: "520473"
          type: string
        panLastFour:
          description: Attribute of the Payment Card that represents the Last four
            digits of the PAN included in an unmasked form.
          example: "9223"
          type: string
        tokenBinRange:
          description: Specific BIN range or subset of the BIN Range that has been
            designated only for the purpose of issuing Payment Tokens in an unmasked
            form.
          example: "5234"
          type: string
        tokenLastFour:
          description: Last four digits of the payment token included in an unmasked
            form.
          example: "7217"
          type: string
        digitalCardData:
          $ref: '#/components/schemas/DigitalCardData'
        panExpirationMonth:
          description: Expiration month of the Payment Card expressed as a two-digit
            calendar month used for presentation purposes.
          example: "10"
          maxLength: 2
          minLength: 2
          type: string
        panExpirationYear:
          description: "Expiration year of the Payment Card expressed as four-digit\
            \ calendar year, used for presentation purposes."
          example: "2024"
          maxLength: 4
          minLength: 4
          type: string
        paymentCardDescriptor:
          description: Indicates the card payment network. This will be set to 'mastercard'
            or 'maestro'.
          example: mastercard
          type: string
        paymentCardType:
          description: Conveys the card type. Note that COMBO and FLEX are for applicable
            regions only.
          enum:
          - CREDIT
          - DEBIT
          - PREPAID
          - COMBO
          - FLEX
          example: CREDIT
          maxLength: 32
          type: string
        digitalCardFeatures:
          description: Card benefits associated with a Digital Card to be presented
            to the Consumer at the time of checkout.
          items:
            $ref: '#/components/schemas/DigitalCardFeature'
          type: array
        countryCode:
          description: Country code associated with the Card Issuer's BIN license.
            ISO 3166-1 alpha 2 country code.
          example: US
          type: string
        maskedBillingAddress:
          $ref: '#/components/schemas/MaskedAddress'
        dcf:
          $ref: '#/components/schemas/DCF'
        serviceId:
          description: A unique identifier assigned by Mastercard for which tokens
            are created uniquely for the entity onboarded.
          example: SECURE_COF_MERCHANT_OBO#SRC4M-OBO-ALL4PETS#01
          type: string
        paymentAccountReference:
          description: A non-financial reference assigned to each unique PAN that's
            used to link the payment account of that PAN to affiliated payment tokens.
          example: 5001EUMYTT3AESCZGUEC77KPCLETI
          type: string
        tokenUniqueReference:
          description: The value of a unique identifier for a token provided by Mastercard
            Digital Enablement Services (MDES)
          example: DM4MMC0000000001cd2826c715b7475bb089b7622366ebe4
          maxLength: 64
          type: string
        dateOfCardCreated:
          description: Date (in UTC) when card was enrolled
          example: 2021-11-25T14:51:03.811Z
          type: string
        dateOfCardLastUsed:
          description: Date (in UTC) when card was last used for a transaction
          example: 2021-11-25T14:51:03.811Z
          type: string
        delegatedAuthenticationModels:
          description: Delegated authentication models. For Secure Card on File this
            will not be returned for Prepare Profile. It will only be available for
            Enroll Card and Get Card responses.
          items:
            $ref: '#/components/schemas/DelegatedAuthenticationModels'
          type: array
      required:
      - dateOfCardCreated
      - digitalCardData
      - panBin
      - panLastFour
      - srcDigitalCardId
      type: object
    MaskedConsumer:
      description: "Object for information related to an enrolled consumer into Mastercard\
        \ Checkout Solutions - details include consumer status, identity and consumer\
        \ enrollment data."
      properties:
        srcConsumerId:
          description: SRC consumer reference identifier as generated by the Click
            to Pay System.
          example: 34d458e5-2886-440d-b3ff-bc5df81438f1
          type: string
        maskedConsumerIdentity:
          $ref: '#/components/schemas/MaskedConsumerIdentity'
        maskedEmailAddress:
          description: Masked Consumer email address.
          example: r*****1@mailinator.com
          maxLength: 255
          type: string
        maskedMobileNumber:
          $ref: '#/components/schemas/PhoneNumber'
        maskedNationalIdentifier:
          description: "Masked Geographic-specific, nationally-provided identifier\
            \ for the Consumer."
          example: '*****678'
          type: string
        complianceSettings:
          $ref: '#/components/schemas/ComplianceSettings'
        countryCode:
          description: Consumer-provided country code. ISO 3166 alpha 2 country code.
          example: US
          type: string
        languageCode:
          description: Consumer-provided language choice. ISO 639-1 Code.
          example: EN
          type: string
        status:
          $ref: '#/components/schemas/ConsumerStatus'
        maskedFirstName:
          description: Masked first name of the Consumer.
          example: J***
          type: string
        maskedLastName:
          description: Masked last name of the Consumer.
          example: D**
          type: string
        maskedFullName:
          description: Masked full name of the Consumer.
          example: J*** D**
          type: string
        dateConsumerAdded:
          description: Date (in UTC) Consumer was added to the Secure Card on File
            system.
          example: 2021-11-25T14:51:03.811Z
          type: string
        dateConsumerLastUsed:
          description: Date (in UTC) Consumer last transacted in the Secure Card on
            File system.
          example: 2021-11-25T14:51:03.811Z
          type: string
      required:
      - dateConsumerAdded
      - maskedConsumerIdentity
      - status
      type: object
    MaskedConsumerIdentity:
      description: "Represents the masked value of the primary verifiable consumer\
        \ identifier within an SRC Profile, e.g. an email address or a mobile phone"
      properties:
        identityProvider:
          $ref: '#/components/schemas/IdentityProvider'
        identityType:
          $ref: '#/components/schemas/ConsumerIdentityType'
        maskedIdentityValue:
          description: "Masked consumer identifier value e.g., masked email address\
            \ or masked mobile phone number."
          example: r*****1@mailinator.com
          maxLength: 255
          type: string
      required:
      - identityType
      - maskedIdentityValue
      type: object
    Payload:
      description: |
        Object for the signed and encrypted payload in JWE format. Refer to Payload object for additional data.
      properties:
        card:
          $ref: '#/components/schemas/Card'
        token:
          $ref: '#/components/schemas/PaymentToken'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        consumerEmailAddress:
          description: Consumer-provided email address.
          example: abc@mastercard.com
          type: string
        consumerFirstName:
          description: Consumer-provided first name.
          example: John
          type: string
        consumerLastName:
          description: Consumer-provided last name.
          example: Doe
          type: string
        consumerFullName:
          description: Consumer-provided full name.
          example: John Doe
          type: string
        consumerMobileNumber:
          $ref: '#/components/schemas/PhoneNumber'
        consumerNationalIdentifier:
          description: "Geographic-specific, nationally-provided identifier for the\
            \ Consumer."
          example: "12345678"
          type: string
        srcTokenResultsData:
          $ref: '#/components/schemas/SrcTokenResultsData'
        dynamicData:
          $ref: '#/components/schemas/DynamicData'
        billingAddress:
          $ref: '#/components/schemas/Address'
        threeDsOutputData:
          $ref: '#/components/schemas/ThreeDsOutputData'
      type: object
    PayloadTypeIndicator:
      description: If it is FULL or PAYMENT client can get full payload (Masked and
        Unmasked data in encrypted format) in response. If it will be NON_PAYMENT
        or SUMMARY client can get just Masked data in response.
      enum:
      - SUMMARY
      - FULL
      - PAYMENT
      - NON_PAYMENT
      type: string
    PaymentOptions:
      description: Object for the Integrator to define the type of checkout payload
        they would like to receive.
      example:
        dynamicDataType: DYNAMIC_CARD_SECURITY_CODE
      properties:
        dynamicDataType:
          $ref: '#/components/schemas/DynamicDataType'
      type: object
    PaymentToken:
      description: Object for token meta data.
      properties:
        paymentToken:
          description: The unique token for the enrolled PAN which can be used in
            authorization as per ISO/IEC 7812 format.
          example: "5299920000000149"
          type: string
        tokenExpirationMonth:
          description: |
            Expiration month of the token expressed as a two-digit calendar month. Supplied when specified for the Payment Token.
          example: "10"
          maxLength: 2
          minLength: 2
          type: string
        tokenExpirationYear:
          description: |
            Expiration year of the token expressed as four-digit calendar year. Supplied when specified for the Payment Token.
          example: "2022"
          maxLength: 4
          minLength: 4
          type: string
        paymentAccountReference:
          description: A non-financial reference assigned to each unique PAN and used
            to link a Payment Account represented by that PAN to affiliated Payment
            Tokens.
          example: 5001EUMYTT3AESCZGUEC77KPCLETI
          type: string
        panSequenceNumber:
          description: Application PAN sequence number for the token that can be provided
            in DE 23 of authorization.
          example: "01"
          maxLength: 20
          minLength: 2
          type: string
      required:
      - paymentToken
      type: object
    PhoneNumber:
      description: "Consumer's Phone number. Conditional : Required for Token Authentication\
        \ Framework. Mandatory if no email address is provided."
      properties:
        countryCode:
          description: "Country code for phone numbers, formatted as an international\
            \ calling code. Input should only contain numbers, without the plus sign."
          example: "1"
          maxLength: 4
          minLength: 1
          type: string
        phoneNumber:
          description: Phone number without country code.
          example: "1234567890"
          type: string
      required:
      - countryCode
      - phoneNumber
      type: object
    SellerData:
      description: |
        Seller supplied data supplied over the acceptance channel technology, or other means.

        __Conditional__: At least one of consumerData or sellerData is required.
      example:
        qrCodeData: 000201010211051904151234567890123455204502453038405405100.05802US5913TestMerchant6008New
          York6208030412346304570E
      properties:
        qrCodeData:
          description: QR code string
          example: 000201010211051904151234567890123455204502453038405405100.05802US5913TestMerchant6008New
            York6208030412346304570E
          type: string
      type: object
    SrcTokenRequestData:
      description: |
        Object for Integrator to provide an optional unpredictableNumber.
      example:
        unpredictableNumber: fa9e0426
      properties:
        unpredictableNumber:
          description: Optional four-byte binary data that can be randomly generated
            by the Integrator and base64 encoded to provide variability and uniqueness
            to the generation of a cryptogram.
          example: fa9e0426
          maxLength: 8
          pattern: "^[0-9a-fA-F]+$"
          type: string
      type: object
    SrcTokenResultsData:
      description: |
        Object for the unpredictableNumber provided by the Integrator that has been injected into the cryptogram.
      properties:
        unpredictableNumber:
          description: Optional four-byte binary data that can be randomly generated
            by the Integrator and base64 encoded to provide variability and uniqueness
            to the generation of a cryptogram.
          example: fa9e0426
          type: string
        tokenRequestorId:
          description: The Id of the Token Requestor
          example: "342143434234"
          type: string
      type: object
    ThreeDsInputData:
      description: |-
        Object for additional 3-D Secure (3DS) input data needed to perform Transaction Authentication and Transaction Integrity.

        __Conditional__: Required when 3DS is to be performed by the Mastercard Checkout Solutions (MCS) system.
      example:
        browser:
          acceptHeader: "application/json, text/plain, /"
          screenWidth: "1000"
          javaEnabled: true
          tz: "-2"
          ip: '***.***.***.***'
          screenHeight: "864"
          javascriptEnabled: true
          language: en-US
          userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101
            Firefox/47.0
          colorDepth: "24"
        acquirer:
          merchantID: 550e8400
          bin: "545301"
      properties:
        browser:
          $ref: '#/components/schemas/Browser'
        acquirer:
          $ref: '#/components/schemas/Acquirer'
      type: object
    ThreeDsOutputData:
      description: |-
        Output data following 3DS processing
        __Conditional__: Required when 3DS is to be performed by the Mastercard Checkout Solutions (MCS) system (i.e., the value of threeDsPreference is set to ONBEHALF).'
      properties:
        dsTransID:
          description: Universally unique transaction identifier assigned by the DS
            to identify a single transaction
          example: 28d29152-9de4-468d-99b4-58e0536569ba
          type: string
      type: object
    ThreeDsPreference:
      enum:
      - NONE
      - SELF
      - ONBEHALF
      type: string
    TransactionAmount:
      description: |
        __Conditional__: An object for transaction amount details that must be provided for Mastercard Merchant Presented QR:SRC program, or if you need to receive a v3 cryptogram. A v3 cryptogram is an enhanced cryptogram used for the Token Authentication Framework (TAF), which strengthens the security of a transaction by linking it to a specific amount and merchant.
      example:
        transactionAmount: 100.12
        transactionCurrencyCode: USD
      properties:
        transactionAmount:
          description: "Numeric value of transaction amount and must be positive.\
            \ Fractions, if present in the transaction amount value, will be affixed\
            \ with zero/s to match the minor unit of transaction currency in question.\
            \ Maximum value allowed will be 13 digits (including decimal point and\
            \ affixed fractions)."
          example: 100.12
          minimum: 0.0
          type: number
        transactionCurrencyCode:
          description: ISO 4217 three-digit currency code for the transaction.
          example: USD
          pattern: "^[0-9a-zA-Z]{3,3}$"
          type: string
      required:
      - transactionAmount
      - transactionCurrencyCode
      type: object
    VerificationData:
      description: "Object for verification related information generated during authentication,\
        \ depending on the type of verification."
      example:
        verificationEntity: "01"
        verificationEvents:
        - "01"
        verificationType: null
        verificationResults: "01"
        additionalData: !!binary |-
          ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
          Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
          WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
          MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
          T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
          R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
          bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
          cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
          YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
          bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
          ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
          b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
          UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
          MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
          cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
          dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
          U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
          MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
          UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
          SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
          ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
          MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
          MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
          MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
          YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
          VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
          VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
          PQ==
        verificationMethod: "01"
        verificationTimestamp: "1633632285"
      properties:
        verificationType:
          $ref: '#/components/schemas/VerificationType'
        verificationEntity:
          description: |-
            <p>Entity performing or initiating Cardholder authentication (e.g., Mastercard Checkout Solutions (MCS) System = "02").</p>
            <p>Valid values are:</p>
            <ul>
              <li>"01" - Integrator</li>
              <li>"02" - Mastercard Checkout Solutions (MCS)</li>
              <li>"03" - Participating Issuer</li>
              <li>"06" -> "99" - Others</li>
            <ul>
          example: "01"
          maxLength: 64
          type: string
        verificationMethod:
          description: |-
            <p>Cardholder authentication method used by the Issuer (e.g., 3-D Secure (3DS) ACS = "01").</p>
              <ul>
                <li>"01" - 3-D Secure (3DS) ACS</li>
                <li>"06" - Proprietary method of authentication</li>
                <li>"04" - A shared secret between the Card Issuer and the Cardholder such as One Time Passcode (OTP), activation code</li>
              <ul>
          example: "01"
          maxLength: 64
          type: string
        verificationResults:
          description: |-
            <p>Indicates whether the Cardholder was verified or not, and what the results are when verified. Results can be:</p>
            <ul>
              <li>"01" - Verified</li>
              <li>"02" - Not Verified</li>
              <li>"03" - Not Performed</li>
              <li>"04" - Not Required</li>
            <ul>
          example: "01"
          maxLength: 64
          type: string
        verificationTimestamp:
          description: Date and time when the verification was conducted. Format Epoch
            UTC Seconds.
          example: "1633632285"
          type: string
        additionalData:
          description: Object for data collected during Cardholder verification. The
            format may vary based on authentication method used.
          example: !!binary |-
            ZXlKMGVYQmxJam9pVUZKUFVGSkpSVlJCVWxraUxDSmpaWEowYVdacFpXUk5abUZOWlhSb2IyUkpa
            Q0k2SWpRelUwRTFJaXdpWlhoMFpYSnVZV3hOWm1GTlpYUm9iMlJKYm5OMFlXNWpaVWxrSWpvaVlt
            WTRZelZpTW1JdE1qaGpaUzAwT0dRNExXRmpZbU10WTJNNE1tWTFNVFEzT0dNMklpd2liV1poVFdW
            MGFHOWtTVzV6ZEdGdVkyVkpaQ0k2SW5Ca01qazFZakppTFRZMlkyVXRORGhrT0MxaFkySmpMV05q
            T0RKbU5URTBOemxrT0NJc0ltRnpjMlZ5ZEdsdmJpSTZJbVY1U2pCbFdFRnBUMmxLUzFZeFVYSmFX
            R2d3VEcxR2VtTXlWbmxrUjJ4MlltdzVNR0l5ZEd4aWFVbHpTVzFHYzFwNVNUWkpiRXBVVFdwVk1r
            bHVNQzVsZDI5blNVTktlbVJYU1dsUGFVRnBXbTFHYlU1cVpHdFpWRlYwV20xR2ExcFRNREJhUjFK
            cFRGZEZlRmxVVlhSWlZGRXdUbFJOZDAxVVZUUlphbXMwU1dsM1MwbERRV2xaV0ZZd1lVZFdkV1JI
            YkdwWldGSndZakkxVTFwWVRqRmlTRkZwVDJsQmFVMUVSV2xNUVc5blNVTkthbUl5TVhkaVIxWXdX
            bGRTUW1SRFNUWkpSRVV5VDBSTmQwMUVXVFJOYWsxelEybEJaMGx0VG14amJsSndXbTFzYkZwRk1V
            ZFJWVEZzWkVkb2RscEZiR3RKYW05blNXcFJlbFV3UlRGSmFYZExTVU5CYVdGWVRucEphbTluU1cx
            b01HUklRbnBQYVRoMllsZEdlbVJIVm5sWk1rWjVXa00xYW1JeU1HbE1RVzluU1VOS2RGcFlTbXBo
            UjBaMVpFVTFhR0pYVldsUGFVRnBZbGRXZVZreWFHaGlibEpQV1ZjeGJFbHBkMHRKUTBGcFdWaFdh
            MGxxYjJkSmJXZ3daRWhDZWs5cE9IWmlWMFo2WkVkV2VWa3lSbmxhUXpWcVlqSXdhVXhCYjJkSlEw
            cG9aRmhTYjFwWE5UQmhWMDVvWkVkc2RtSnJNV3hrUjJoMldrTkpOa2xEU1hkT2FVbHpRMmxCWjBs
            dFJqRmtSMmhzWW01U2NGa3lSakJoVnpsMVVtMUdhbVJIT1hsamVVazJTVU5KZDAxVVFURkphWGRM
            U1VOQmFXUklTbWhpYms1b1dUTlNjR0l5TlVKaVZ6a3hZbTVSYVU5cFFXbE5WRUYxVFVSamFVeEJi
            MmRKUTBwNlkyMU9SV0ZYWkhCa1IwWnpVVEpHZVZwRmJHdEphbTluU1cxSk0xbFVXbWxPVjFKcVRG
            UnJlazVYVFhST1JFa3hXVk13TkZwWFNYZE1WMUpyV1hwcmVFMUhVbXRaYW1zd1dWTkpjME5wUVdk
            SmJWWTBZME5KTmtsRVJUSlBSRTEzVFVSak0wMXFUWE5EYVVGblNXMHhiVmxWTVd4a1IyaDJXa1Zz
            ZFdNelVtaGliVTVzVTFkUmFVOXBRV2xqUjFGNVQxUldhVTF0U1hST2FscHFXbE13TUU5SFVUUk1W
            MFpxV1cxTmRGa3lUVFJOYlZreFRWUlJNMDlYVVRSSmFYZExTVU5CYVdGWFJqQkphbTluVFZSWk5F
            MTZRWGRPYW1kNVRYbDNTMGxEUVdsaGJsSndTV3B2WjBsdFJtcFplbEp0V2xkWmVVeFhWVEpOVjFG
            MFRrZGFhVTFwTVdoWlYxa3hURlJOTWsxdFJYcFpWRXB0VDBkVmVVOVRTWE5EYVVGblNXMUdNV1JI
            YUd4aWJsSndXVEpHTUdGWE9YVlZiVlpvWXpJNWRXTjVTVFpKUm5OTFNVTkJaMGxEU2xWVmEwWlBW
            VEJHUkZaRmJGQlViRGxDVmxaU1NWSlZOVlZUVlU1Q1ZrVnNVRlJwU1V0SlEwSmtRMjR3TGpSNVpE
            VkZNemx0VlRWRlNGSk1kWGhXWVVrMmNqaE1ObXB6WjBwbmIxUnVaRTFHYWxKNU5YTkhkVWtpZlE9
            PQ==
          format: byte
          type: string
        verificationEvents:
          description: |-
            <p>Event that prompted the Cardholder authentication (e.g., Payment Transaction = "01").</p>
            <p>For verificationType CARDHOLDER, valid values are:</p>
            <ul>
              <li>"01" - Payment Transaction</li>
              <li>"02" - Add Card/Card Enrollment</li>
            <ul>
          example:
          - "01"
          items:
            type: string
          type: array
      required:
      - verificationEntity
      - verificationMethod
      - verificationResults
      - verificationTimestamp
      - verificationType
      type: object
    VerificationType:
      description: "Type of authentication carried out on the entity. Currently, Mastercard\
        \ Checkout Solutions (MCS) only supports \"CARDHOLDER\"."
      enum:
      - CARDHOLDER
      type: string
    keyFingerprintId:
      description: "Mastercard will use the encryption key associated with the supplied\
        \ KID to encrypt the payload. If not supplied, the key which is marked as\
        \ default will be used."
      example: nwzNuN9upxolVsr6q0I/phcnfA/ZlaJ2gmAJiogMCwM
      type: string
    merchantCategoryCode:
      description: "Describes the merchant’s type of business, product or service.\
        \ The same value is expected in the authorization request."
      example: "4444"
      type: string
    merchantCountryCode:
      description: Country code of the merchant.
      example: US
      format: ISO 3166 alpha 2
      type: string
    serviceId:
      description: A unique identifier assigned by Mastercard for which tokens are
        created uniquely for the entity onboarded.
      example: SECURE_COF_MERCHANT_OBO#SRC4M-OBO-ALL4PETS#01
      type: string
    srcClientId:
      description: A unique identifier assigned by Mastercard during onboarding which
        signifies the responsible party Integrating to Mastercard Checkout Solutions
        (MCS).
      example: eccbf087-f159-4d69-b31d-00bec75c0474
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      type: string
  securitySchemes:
    jwtBearerAuth:
      bearerFormat: JWT
      description: "Bearer. Carries one of the supported authorization types, structured\
        \ as a JWT, generated and signed by an Identity Provider. Used to identify\
        \ the associated customer account profile, and attests that the requester\
        \ is authorized to access this data."
      scheme: bearer
      type: http
    xOpenApiClientId:
      description: Open API key to make the server to server call to Mastercard SRC
        System.
      in: header
      name: x-openapi-clientid
      type: apiKey

