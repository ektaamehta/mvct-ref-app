/*
 * Mastercard Checkout Solutions Card API
 * API definitions for Mastercard Secure Card on File Cards API Endpoint. The Cards endpoint enrolls a mastercard card into a specified Secure Card on File. The Get Card by ID will retrieve the MaskedCard details, for the specified card ID. Delete card by card ID will delete the previously enrolled card. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.card.api;

import com.mcs.virtualcardtokens.card.invoker.ApiException;
import com.mcs.virtualcardtokens.card.model.Error;
import com.mcs.virtualcardtokens.card.model.GetRecentTransactionsResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionsApi
 */
@Disabled
public class TransactionsApiTest {

    private final TransactionsApi api = new TransactionsApi();

    /**
     * RETRIEVE TRANSACTIONS
     *
     * Get transactions by Card Id API will retrieve the recent transactions for the specified card identifier. Integrators may retrieve recent transactions details for a specified card identifier via the Get Transaction Details request. If the Issuer of the card does not support Transaction Detail Service, the Get Transaction Details request will return an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionHistoryTest() throws ApiException {
        String cardId = null;
        UUID srcClientId = null;
        String serviceId = null;
        String srciTransactionId = null;
        String transactionsFromTimestamp = null;
        GetRecentTransactionsResponse response = api.getTransactionHistory(cardId, srcClientId, serviceId, srciTransactionId, transactionsFromTimestamp);
        // TODO: test validations
    }

}
