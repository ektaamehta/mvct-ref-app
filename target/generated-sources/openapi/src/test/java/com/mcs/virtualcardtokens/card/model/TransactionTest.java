/*
 * Mastercard Checkout Solutions Card API
 * API definitions for Mastercard Secure Card on File Cards API Endpoint. The Cards endpoint enrolls a mastercard card into a specified Secure Card on File. The Get Card by ID will retrieve the MaskedCard details, for the specified card ID. Delete card by card ID will delete the previously enrolled card. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.card.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Transaction
 */
public class TransactionTest {
    private final Transaction model = new Transaction();

    /**
     * Model tests for Transaction
     */
    @Test
    public void testTransaction() {
        // TODO: test Transaction
    }

    /**
     * Test the property 'srcDigitalCardId'
     */
    @Test
    public void srcDigitalCardIdTest() {
        // TODO: test srcDigitalCardId
    }

    /**
     * Test the property 'serviceId'
     */
    @Test
    public void serviceIdTest() {
        // TODO: test serviceId
    }

    /**
     * Test the property 'srcConsumerId'
     */
    @Test
    public void srcConsumerIdTest() {
        // TODO: test srcConsumerId
    }

    /**
     * Test the property 'tokenUniqueReference'
     */
    @Test
    public void tokenUniqueReferenceTest() {
        // TODO: test tokenUniqueReference
    }

    /**
     * Test the property 'recordId'
     */
    @Test
    public void recordIdTest() {
        // TODO: test recordId
    }

    /**
     * Test the property 'transactionIdentifier'
     */
    @Test
    public void transactionIdentifierTest() {
        // TODO: test transactionIdentifier
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'authorizationStatus'
     */
    @Test
    public void authorizationStatusTest() {
        // TODO: test authorizationStatus
    }

    /**
     * Test the property 'transactionTimestamp'
     */
    @Test
    public void transactionTimestampTest() {
        // TODO: test transactionTimestamp
    }

    /**
     * Test the property 'merchantName'
     */
    @Test
    public void merchantNameTest() {
        // TODO: test merchantName
    }

    /**
     * Test the property 'merchantType'
     */
    @Test
    public void merchantTypeTest() {
        // TODO: test merchantType
    }

    /**
     * Test the property 'merchantPostalCode'
     */
    @Test
    public void merchantPostalCodeTest() {
        // TODO: test merchantPostalCode
    }

    /**
     * Test the property 'installments'
     */
    @Test
    public void installmentsTest() {
        // TODO: test installments
    }

    /**
     * Test the property 'transactionCountryCode'
     */
    @Test
    public void transactionCountryCodeTest() {
        // TODO: test transactionCountryCode
    }

    /**
     * Test the property 'comboCardAccountType'
     */
    @Test
    public void comboCardAccountTypeTest() {
        // TODO: test comboCardAccountType
    }

    /**
     * Test the property 'issuerResponseInformation'
     */
    @Test
    public void issuerResponseInformationTest() {
        // TODO: test issuerResponseInformation
    }

}
