/*
 * Mastercard Checkout Solutions Card API
 * API definitions for Mastercard Secure Card on File Cards API Endpoint. The Cards endpoint enrolls a mastercard card into a specified Secure Card on File. The Get Card by ID will retrieve the MaskedCard details, for the specified card ID. Delete card by card ID will delete the previously enrolled card. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.card.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mcs.virtualcardtokens.card.model.DelegatedAuthenticationModel;
import com.mcs.virtualcardtokens.card.model.DigitalCardData;
import com.mcs.virtualcardtokens.card.model.MfaEligibilityModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MaskedCard
 */
public class MaskedCardTest {
    private final MaskedCard model = new MaskedCard();

    /**
     * Model tests for MaskedCard
     */
    @Test
    public void testMaskedCard() {
        // TODO: test MaskedCard
    }

    /**
     * Test the property 'srcDigitalCardId'
     */
    @Test
    public void srcDigitalCardIdTest() {
        // TODO: test srcDigitalCardId
    }

    /**
     * Test the property 'panBin'
     */
    @Test
    public void panBinTest() {
        // TODO: test panBin
    }

    /**
     * Test the property 'panLastFour'
     */
    @Test
    public void panLastFourTest() {
        // TODO: test panLastFour
    }

    /**
     * Test the property 'tokenUniqueReference'
     */
    @Test
    public void tokenUniqueReferenceTest() {
        // TODO: test tokenUniqueReference
    }

    /**
     * Test the property 'tokenLastFour'
     */
    @Test
    public void tokenLastFourTest() {
        // TODO: test tokenLastFour
    }

    /**
     * Test the property 'tokenExpirationMonth'
     */
    @Test
    public void tokenExpirationMonthTest() {
        // TODO: test tokenExpirationMonth
    }

    /**
     * Test the property 'tokenExpirationYear'
     */
    @Test
    public void tokenExpirationYearTest() {
        // TODO: test tokenExpirationYear
    }

    /**
     * Test the property 'digitalCardData'
     */
    @Test
    public void digitalCardDataTest() {
        // TODO: test digitalCardData
    }

    /**
     * Test the property 'panExpirationMonth'
     */
    @Test
    public void panExpirationMonthTest() {
        // TODO: test panExpirationMonth
    }

    /**
     * Test the property 'panExpirationYear'
     */
    @Test
    public void panExpirationYearTest() {
        // TODO: test panExpirationYear
    }

    /**
     * Test the property 'paymentCardDescriptor'
     */
    @Test
    public void paymentCardDescriptorTest() {
        // TODO: test paymentCardDescriptor
    }

    /**
     * Test the property 'paymentCardType'
     */
    @Test
    public void paymentCardTypeTest() {
        // TODO: test paymentCardType
    }

    /**
     * Test the property 'serviceId'
     */
    @Test
    public void serviceIdTest() {
        // TODO: test serviceId
    }

    /**
     * Test the property 'paymentAccountReference'
     */
    @Test
    public void paymentAccountReferenceTest() {
        // TODO: test paymentAccountReference
    }

    /**
     * Test the property 'dateOfCardCreated'
     */
    @Test
    public void dateOfCardCreatedTest() {
        // TODO: test dateOfCardCreated
    }

    /**
     * Test the property 'delegatedAuthenticationModels'
     */
    @Test
    public void delegatedAuthenticationModelsTest() {
        // TODO: test delegatedAuthenticationModels
    }

    /**
     * Test the property 'mfaEligibility'
     */
    @Test
    public void mfaEligibilityTest() {
        // TODO: test mfaEligibility
    }

}
