/*
 * Mastercard Virtual Card Token Checkout API
 * Checkout end point used by Mastercard Virtual Card Token Integrators to receive payload data from the Mastercard Checkout Solutions and send the results of transaction authorization back to the Mastercard. Endpoints are available to retrieve payload data and send the outcome of a payment or checkout.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.checkout.api;

import com.mcs.virtualcardtokens.checkout.invoker.ApiException;
import com.mcs.virtualcardtokens.checkout.model.CheckoutRequest;
import com.mcs.virtualcardtokens.checkout.model.CheckoutResponse;
import com.mcs.virtualcardtokens.checkout.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CheckoutApi
 */
@Disabled
public class CheckoutApiTest {

    private final CheckoutApi api = new CheckoutApi();

    /**
     * Checkout end point for retrieving transaction payload.
     *
     * Requests the preparation of transaction credentials for checkout. The transaction credentials payload data is encrypted according to JSON Web Encryption (JWE) specification RFC 7516. Algorithm used to encrypt the payload is according to RFC 7518 section 4.1. Obtain the encrypted transaction credentials for an enrolled card from Secure Card on File so that it can be submitted for authorization processing and the consumer can complete the purchase.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postTransactionCredentialsTest() throws ApiException {
        CheckoutRequest checkoutRequest = null;
        String xSrcCxFlowId = null;
        String xSrcResponseHost = null;
        CheckoutResponse response = api.postTransactionCredentials(checkoutRequest, xSrcCxFlowId, xSrcResponseHost);
        // TODO: test validations
    }

}
