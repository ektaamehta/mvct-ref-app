/*
 * Mastercard Checkout Solutions Card API
 * API definitions for Mastercard Secure Card on File Cards API Endpoint. The Cards endpoint enrolls a mastercard card into a specified Secure Card on File. The Get Card by ID will retrieve the MaskedCard details, for the specified card ID. Delete card by card ID will delete the previously enrolled card. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.card.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DecisioningData
 */
public class DecisioningDataTest {
    private final DecisioningData model = new DecisioningData();

    /**
     * Model tests for DecisioningData
     */
    @Test
    public void testDecisioningData() {
        // TODO: test DecisioningData
    }

    /**
     * Test the property 'recommendation'
     */
    @Test
    public void recommendationTest() {
        // TODO: test recommendation
    }

    /**
     * Test the property 'recommendationAlgorithmVersion'
     */
    @Test
    public void recommendationAlgorithmVersionTest() {
        // TODO: test recommendationAlgorithmVersion
    }

    /**
     * Test the property 'deviceScore'
     */
    @Test
    public void deviceScoreTest() {
        // TODO: test deviceScore
    }

    /**
     * Test the property 'accountScore'
     */
    @Test
    public void accountScoreTest() {
        // TODO: test accountScore
    }

    /**
     * Test the property 'recommendationReasons'
     */
    @Test
    public void recommendationReasonsTest() {
        // TODO: test recommendationReasons
    }

    /**
     * Test the property 'deviceCurrentLocation'
     */
    @Test
    public void deviceCurrentLocationTest() {
        // TODO: test deviceCurrentLocation
    }

    /**
     * Test the property 'deviceIpAddress'
     */
    @Test
    public void deviceIpAddressTest() {
        // TODO: test deviceIpAddress
    }

    /**
     * Test the property 'mobileNumberSuffix'
     */
    @Test
    public void mobileNumberSuffixTest() {
        // TODO: test mobileNumberSuffix
    }

    /**
     * Test the property 'accountIdHash'
     */
    @Test
    public void accountIdHashTest() {
        // TODO: test accountIdHash
    }

}
