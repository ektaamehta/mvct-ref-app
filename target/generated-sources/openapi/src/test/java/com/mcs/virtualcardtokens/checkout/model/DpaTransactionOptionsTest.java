/*
 * Mastercard Virtual Card Token Checkout API
 * Checkout end point used by Mastercard Virtual Card Token Integrators to receive payload data from the Mastercard Checkout Solutions and send the results of transaction authorization back to the Mastercard. Endpoints are available to retrieve payload data and send the outcome of a payment or checkout.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mcs.virtualcardtokens.checkout.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mcs.virtualcardtokens.checkout.model.PaymentOptions;
import com.mcs.virtualcardtokens.checkout.model.SrcTokenRequestData;
import com.mcs.virtualcardtokens.checkout.model.ThreeDsInputData;
import com.mcs.virtualcardtokens.checkout.model.ThreeDsPreference;
import com.mcs.virtualcardtokens.checkout.model.TransactionAmount;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DpaTransactionOptions
 */
public class DpaTransactionOptionsTest {
    private final DpaTransactionOptions model = new DpaTransactionOptions();

    /**
     * Model tests for DpaTransactionOptions
     */
    @Test
    public void testDpaTransactionOptions() {
        // TODO: test DpaTransactionOptions
    }

    /**
     * Test the property 'transactionAmount'
     */
    @Test
    public void transactionAmountTest() {
        // TODO: test transactionAmount
    }

    /**
     * Test the property 'merchantCategoryCode'
     */
    @Test
    public void merchantCategoryCodeTest() {
        // TODO: test merchantCategoryCode
    }

    /**
     * Test the property 'merchantCountryCode'
     */
    @Test
    public void merchantCountryCodeTest() {
        // TODO: test merchantCountryCode
    }

    /**
     * Test the property 'threeDsPreference'
     */
    @Test
    public void threeDsPreferenceTest() {
        // TODO: test threeDsPreference
    }

    /**
     * Test the property 'threeDsInputData'
     */
    @Test
    public void threeDsInputDataTest() {
        // TODO: test threeDsInputData
    }

    /**
     * Test the property 'srcTokenRequestData'
     */
    @Test
    public void srcTokenRequestDataTest() {
        // TODO: test srcTokenRequestData
    }

    /**
     * Test the property 'paymentOptions'
     */
    @Test
    public void paymentOptionsTest() {
        // TODO: test paymentOptions
    }

    /**
     * Test the property 'dpaLocale'
     */
    @Test
    public void dpaLocaleTest() {
        // TODO: test dpaLocale
    }

}
